1. Pass shaders as an object with an index, where the index is the order in which to run the shaders DONE
2. Pass uniforms and "layers" as objects with a corresponding index DONE
3. Build "Pseudolayers" -> objects that can be input into the webgl object and render without further manipulation
   These will be a way of storing "layers" that can easily be generated on the fly as and when needed DONE
4. Finish and test _runMultipleSources method of webgl object DONE
5. only allow one shader to be run at a time for any pseudolayer DONE
6. allow an "input" to a pseudolayer to be another pseudolayer DONE
7. comment code
8. try kerneling DONE
9. build argument formatters DONE
10. implement FPS throttling DONE
11. ensure that only the maps that are currently used for pseudolayers are rendered to save requests DONE
12. work out how to pass arrays of textures
13. environment variables -> including current map with control (due to z-index ordering)
14. flexible guis that are easy to add to