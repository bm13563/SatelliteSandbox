1. Pass shaders as an object with an index, where the index is the order in which to run the shaders DONE
2. Pass uniforms and "layers" as objects with a corresponding index DONE
3. Build "Pseudolayers" -> objects that can be input into the webgl object and render without further manipulation
   These will be a way of storing "layers" that can easily be generated on the fly as and when needed DONE
4. Finish and test _runMultipleSources method of webgl object DONE
5. only allow one shader to be run at a time for any pseudolayer DONE
6. allow an "input" to a pseudolayer to be another pseudolayer DONE
7. comment code
8. try kerneling DONE
9. build argument formatters DONE
10. implement FPS throttling DONE
11. ensure that only the maps that are currently used for pseudolayers are rendered to save requests DONE
12. work out how to pass arrays of textures
13. environment variables -> including current map with control (due to z-index ordering)
14. flexible guis that are easy to add to DONE
15. Add "create new layer" and "reset layer" to GUIS DONE
16. refactor -> differentiate between "layerObject", "uiLayer" and "pseudolayer". standardise punction for the above DONE
17. pass constructors to gui on instantiation DONE
18. apply multiple effects to a pseudolayer without having to create a new layer DONE
19. fix bug where same pseudolayer duplicated breaks selection system DONE
20. panel that shows the updates to a layer when changed (to track changes) DONE
21. look into 18 DONE
22. add suggested kernels
23. test and bug fix gui state (back to 18 sigh) DONE
24. bug fix changing operator on filter RGB. when shader is called, variable changes seem to be affecting the child layer
    SHADER IS BEING APPLIED TWICE. issue is with object mutation - state object is mutating so any changes in state are stacking
    and effect is being applied multiple times DONE
25. fix GPU memory leak DONE -> kind of, is getting garbage collected but probably not as often as it should. still runs into memory issues FIXED ->
    was textures attached to framebuffer not being deleted DONE
26. refactor webgl.js
27. work out what flickering is on render -> due to openlayers animations. removing transitions when setting up the layer removes artifacts. DONE
28. custom event for rendering when canvas is ready -> may not be necessary, to review
29. still worried about minor memory leak, to review -> monitor but doesn;t seem to be a  problem
30. fix bug with UI state DONE
31. seperate out "canvasReady" into "layersReady", "mapsReady" and "shadersReady" events. canvasReady only true if all of the others are true. DONE
32. fix ui bugs caused by 31 -> seems to be that when a second effect is applied, on the first render pass the first effect changes DONE
33. build band calculators -> single and multiple layers
34. rewrite/ re-comment restoreGuiState function in ui DONE -> just removed it
35. rework ui (AGAIN) DONE
36. bug when layers are switched while tiles are loading. because number of shader passes is being updated while shaders arent ready DONE
37. finish side-by-side visualisation
38. replace stackLayers shader with mix(image1, image2, interpolation)

